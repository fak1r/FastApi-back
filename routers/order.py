from fastapi import APIRouter, HTTPException
from schemas import TelegramOrderRequest
from datetime import datetime
import httpx
import os

router = APIRouter(prefix="/order", tags=["Order"])

TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

@router.post("/telegram")
async def send_telegram_order(data: TelegramOrderRequest):
    if not data.items:
        raise HTTPException(status_code=400, detail="–ü—É—Å—Ç–æ–π –∑–∞–∫–∞–∑")

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    order_time = datetime.now().strftime("%d.%m.%Y %H:%M")
    message = f"üìå *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑*\n\nüìû –ö–ª–∏–µ–Ω—Ç: `{data.phone}`\nüïí –í—Ä–µ–º—è: {order_time}\n\n"

    total = 0
    for item in data.items:
        item_total = item.quantity * item.price
        total += item_total
        message += (
            f"üì¶ *{item.name}*\n"
            f"üíµ –ö–æ–ª-–≤–æ: {item.quantity}, –¶–µ–Ω–∞: {item.price} ‚ÇΩ, –°—É–º–º–∞: {item_total} ‚ÇΩ\n\n"
        )

    message += f"üí∞ *–ò—Ç–æ–≥–æ:* {total} ‚ÇΩ"

    send_url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"

    async with httpx.AsyncClient() as client:
        response = await client.post(
            send_url,
            json={
                "chat_id": TELEGRAM_CHAT_ID,
                "text": message,
                "parse_mode": "Markdown"
            }
        )

    if response.status_code != 200:
        raise HTTPException(status_code=500, detail="–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –≤ Telegram")

    return {"success": True}
